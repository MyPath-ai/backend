name: Deploy to Google Cloud Run with Artifact Registry

on:
  push:
    branches:
      - main  # or your default branch

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up timezone
      uses: szenius/set-timezone@v1.2
      with:
        timezoneLinux: "Asia/Jakarta"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials_json:  ${{ secrets.GCP_SA_KEY }}

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: '>= 363.0.0'
      
    - name: Configure Docker for Google Artifact Registry
      run: gcloud auth configure-docker asia-east1-docker.pkg.dev

    - name: Build and push to Google Artifact Registry
      run: |
        DATE_TAG=$(date +'%Y.%m.%d-%H.%M.%S')-main
        docker build \
          -t asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPO }}/api:main \
          -t asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPO }}/api:$DATE_TAG \
          --push .

    - name: Deploy to Google Cloud Run
      run: |
        gcloud run deploy ${{ secrets.GCP_RUN_SERVICE }} \
          --image=asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPO }}/api:main \
          --set-env-vars "PG_HOST=${{ secrets.PG_HOST }}" \
          --set-env-vars "PG_USER=${{ secrets.PG_USER }}" \
          --set-env-vars "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" \
          --set-env-vars "PG_DATABASE=${{ secrets.PG_DATABASE }}" \
          --set-env-vars "PG_PORT=${{ secrets.PG_PORT }}" \
          --set-env-vars "DOCS_HTTPS_URL=${{ secrets.DOCS_HTTPS_URL }}" \
          --set-env-vars "API_PORT=8080" \
          --set-env-vars "API_KEY=${{ secrets.API_KEY }}" \
          --set-env-vars "JWT_SECRET=${{ secrets.JWT_SECRET }}" \
          --set-env-vars "JWT_resetSECRET=${{ secrets.JWT_RESETSECRET }}" \
          --set-env-vars "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" \
          --set-env-vars "JWT_COOKIE_EXPIRES=${{ secrets.JWT_COOKIE_EXPIRES }}" \
          --set-env-vars "OPENAI_API_KEY${{ secrets.OPENAI_API_KEY }}" \
          --port=8080 \
          --region=asia-east1 \
          --platform=managed \
          --allow-unauthenticated  # or --no-allow-unauthenticated if you want to restrict access
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}